### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  commentId: T:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  id: PortalController
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers
  children:
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfigurationRoot)
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init(Swastika.Cms.Lib.ViewModels.InitCmsViewModel)
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  langs:
  - csharp
  - vb
  name: PortalController
  nameWithType: PortalController
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  type: Class
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: 'public class PortalController : BaseController<PortalController>'
    content.vb: >-
      Public Class PortalController

          Inherits BaseController(Of PortalController)
  inheritance:
  - System.Object
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  inheritedMembers:
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_CULTURE_NAME
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_DEFAULT_CULTURE
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._domain
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._configuration
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._env
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.GetLanguage
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadListFileAsync(System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ViewContext
  - Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.CurrentLanguage
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfigurationRoot)
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfigurationRoot)
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfigurationRoot)'
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: PortalController(IHostingEnvironment, IConfigurationRoot)
  nameWithType: PortalController.PortalController(IHostingEnvironment, IConfigurationRoot)
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.PortalController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Configuration.IConfigurationRoot)
  type: Constructor
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public PortalController(IHostingEnvironment env, IConfigurationRoot configuration)
    parameters:
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
    content.vb: Public Sub New(env As IHostingEnvironment, configuration As IConfigurationRoot)
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  id: Index
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Index()
  nameWithType: PortalController.Index()
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index()
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public IActionResult Index()
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Index As IActionResult
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  id: Init
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: PortalController.Init()
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init()
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public IActionResult Init()
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Init As IActionResult
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init(Swastika.Cms.Lib.ViewModels.InitCmsViewModel)
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init(Swastika.Cms.Lib.ViewModels.InitCmsViewModel)
  id: Init(Swastika.Cms.Lib.ViewModels.InitCmsViewModel)
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Init(InitCmsViewModel)
  nameWithType: PortalController.Init(InitCmsViewModel)
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init(Swastika.Cms.Lib.ViewModels.InitCmsViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public IActionResult Init(InitCmsViewModel model)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.ViewModels.InitCmsViewModel
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Init(model As InitCmsViewModel) As IActionResult
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  id: Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Search(String, SWCmsConstants.SearchType)
  nameWithType: PortalController.Search(String, SWCmsConstants.SearchType)
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String, Swastika.Cms.Lib.SWCmsConstants.SearchType)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public Task<IActionResult> Search(string keyword, SWCmsConstants.SearchType searchType)
    parameters:
    - id: keyword
      type: System.String
    - id: searchType
      type: Swastika.Cms.Lib.SWCmsConstants.SearchType
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Search(keyword As String, searchType As SWCmsConstants.SearchType) As Task(Of IActionResult)
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers
  commentId: N:Swastika.Cms.Mvc.Areas.Portal.Controllers
  isExternal: false
  name: Swastika.Cms.Mvc.Areas.Portal.Controllers
  nameWithType: Swastika.Cms.Mvc.Areas.Portal.Controllers
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  commentId: T:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  parent: Swastika.Cms.Mvc.Controllers
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1
  name: BaseController<PortalController>
  nameWithType: BaseController<PortalController>
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>
  nameWithType.vb: BaseController(Of PortalController)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController)
  name.vb: BaseController(Of PortalController)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    name: PortalController
    nameWithType: PortalController
    fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    name: PortalController
    nameWithType: PortalController
    fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_CULTURE_NAME
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_CULTURE_NAME
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  name: ROUTE_CULTURE_NAME
  nameWithType: BaseController<PortalController>.ROUTE_CULTURE_NAME
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.ROUTE_CULTURE_NAME
  nameWithType.vb: BaseController(Of PortalController).ROUTE_CULTURE_NAME
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).ROUTE_CULTURE_NAME
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_DEFAULT_CULTURE
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ROUTE_DEFAULT_CULTURE
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  name: ROUTE_DEFAULT_CULTURE
  nameWithType: BaseController<PortalController>.ROUTE_DEFAULT_CULTURE
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.ROUTE_DEFAULT_CULTURE
  nameWithType.vb: BaseController(Of PortalController).ROUTE_DEFAULT_CULTURE
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).ROUTE_DEFAULT_CULTURE
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._domain
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._domain
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  name: _domain
  nameWithType: BaseController<PortalController>._domain
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>._domain
  nameWithType.vb: BaseController(Of PortalController)._domain
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController)._domain
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._configuration
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._configuration
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  name: _configuration
  nameWithType: BaseController<PortalController>._configuration
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>._configuration
  nameWithType.vb: BaseController(Of PortalController)._configuration
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController)._configuration
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._env
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}._env
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._env
  name: _env
  nameWithType: BaseController<PortalController>._env
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>._env
  nameWithType.vb: BaseController(Of PortalController)._env
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController)._env
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController<PortalController>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseController(Of PortalController).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController<PortalController>.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController(Of PortalController).OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.GetLanguage
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.GetLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  name: GetLanguage()
  nameWithType: BaseController<PortalController>.GetLanguage()
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.GetLanguage()
  nameWithType.vb: BaseController(Of PortalController).GetLanguage()
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).GetLanguage()
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController<PortalController>.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController(Of PortalController).GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseController<PortalController>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseController(Of PortalController).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController<PortalController>.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController(Of PortalController).UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadListFileAsync(System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.UploadListFileAsync(System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  name: UploadListFileAsync(String)
  nameWithType: BaseController<PortalController>.UploadListFileAsync(String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.UploadListFileAsync(System.String)
  nameWithType.vb: BaseController(Of PortalController).UploadListFileAsync(String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController<PortalController>.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController(Of PortalController).UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ViewContext
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.ViewContext
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  name: ViewContext
  nameWithType: BaseController<PortalController>.ViewContext
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.ViewContext
  nameWithType.vb: BaseController(Of PortalController).ViewContext
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).ViewContext
- uid: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.CurrentLanguage
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}.CurrentLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  name: CurrentLanguage
  nameWithType: BaseController<PortalController>.CurrentLanguage
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>.CurrentLanguage
  nameWithType.vb: BaseController(Of PortalController).CurrentLanguage
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController).CurrentLanguage
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1
  commentId: T:Swastika.Cms.Mvc.Controllers.BaseController`1
  isExternal: true
  name: BaseController<T>
  nameWithType: BaseController<T>
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>
  nameWithType.vb: BaseController(Of T)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)
  name.vb: BaseController(Of T)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers
  commentId: N:Swastika.Cms.Mvc.Controllers
  isExternal: false
  name: Swastika.Cms.Mvc.Controllers
  nameWithType: Swastika.Cms.Mvc.Controllers
  fullName: Swastika.Cms.Mvc.Controllers
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  isExternal: true
  name: ROUTE_CULTURE_NAME
  nameWithType: BaseController<T>.ROUTE_CULTURE_NAME
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ROUTE_CULTURE_NAME
  nameWithType.vb: BaseController(Of T).ROUTE_CULTURE_NAME
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ROUTE_CULTURE_NAME
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  isExternal: true
  name: ROUTE_DEFAULT_CULTURE
  nameWithType: BaseController<T>.ROUTE_DEFAULT_CULTURE
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ROUTE_DEFAULT_CULTURE
  nameWithType.vb: BaseController(Of T).ROUTE_DEFAULT_CULTURE
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ROUTE_DEFAULT_CULTURE
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  isExternal: true
  name: _domain
  nameWithType: BaseController<T>._domain
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._domain
  nameWithType.vb: BaseController(Of T)._domain
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._domain
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  isExternal: true
  name: _configuration
  nameWithType: BaseController<T>._configuration
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._configuration
  nameWithType.vb: BaseController(Of T)._configuration
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._configuration
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._env
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._env
  isExternal: true
  name: _env
  nameWithType: BaseController<T>._env
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._env
  nameWithType.vb: BaseController(Of T)._env
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._env
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController<T>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseController(Of T).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController<T>.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController(Of T).OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseController<T>.GetLanguage()
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.GetLanguage()
  nameWithType.vb: BaseController(Of T).GetLanguage()
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).GetLanguage()
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController<T>.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController(Of T).GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseController<T>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseController(Of T).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController<T>.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController(Of T).UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseController<T>.UploadListFileAsync(String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadListFileAsync(System.String)
  nameWithType.vb: BaseController(Of T).UploadListFileAsync(String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController<T>.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController(Of T).UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  isExternal: true
  name: ViewContext
  nameWithType: BaseController<T>.ViewContext
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ViewContext
  nameWithType.vb: BaseController(Of T).ViewContext
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ViewContext
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  isExternal: true
  name: CurrentLanguage
  nameWithType: BaseController<T>.CurrentLanguage
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.CurrentLanguage
  nameWithType.vb: BaseController(Of T).CurrentLanguage
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).CurrentLanguage
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor
  isExternal: true
  name: PortalController
  nameWithType: PortalController.PortalController
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.PortalController
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  isExternal: true
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  isExternal: true
  name: Index
  nameWithType: PortalController.Index
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  isExternal: true
  name: Init
  nameWithType: PortalController.Init
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
- uid: Swastika.Cms.Lib.ViewModels.InitCmsViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.InitCmsViewModel
  parent: Swastika.Cms.Lib.ViewModels
  isExternal: true
  name: InitCmsViewModel
  nameWithType: InitCmsViewModel
  fullName: Swastika.Cms.Lib.ViewModels.InitCmsViewModel
- uid: Swastika.Cms.Lib.ViewModels
  commentId: N:Swastika.Cms.Lib.ViewModels
  isExternal: false
  name: Swastika.Cms.Lib.ViewModels
  nameWithType: Swastika.Cms.Lib.ViewModels
  fullName: Swastika.Cms.Lib.ViewModels
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search
  isExternal: true
  name: Search
  nameWithType: PortalController.Search
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.SWCmsConstants.SearchType
  commentId: T:Swastika.Cms.Lib.SWCmsConstants.SearchType
  parent: Swastika.Cms.Lib
  isExternal: true
  name: SWCmsConstants.SearchType
  nameWithType: SWCmsConstants.SearchType
  fullName: Swastika.Cms.Lib.SWCmsConstants.SearchType
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
  commentId: '!:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib
  commentId: N:Swastika.Cms.Lib
  isExternal: false
  name: Swastika.Cms.Lib
  nameWithType: Swastika.Cms.Lib
  fullName: Swastika.Cms.Lib
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
